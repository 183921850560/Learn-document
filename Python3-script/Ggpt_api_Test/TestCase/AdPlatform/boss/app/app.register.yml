suiteName: app.register 
testCase:
  - case 1:
      testCaseName: 验证码无效
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q12345678)}
        password: ${get_encode_str(word=q12345678)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - ne: ["app.code", 0]
  - case 2:
      testCaseName: 参数正确，用户注册
      setup:
        - name: 删除用户
          environment: base_platform
          api: [basePlatform,user.deleteUser]
          json:
            guid: $app_guid
            operatorUserId: 43
          validate:
            - eq: ["status_code", 200]
            - contained_by: ["bp.code", [0, 40000004]]
        - name: 发送手机注册验证码
          api: [boss, sms.verifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 1
          validate:
            - eq: ["status_code", 200]
            - eq: ["sms.code", 0]

        - name: 获取注册验证码
          api: [boss, sms.getVerifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 1
          validate:
            - eq: ["status_code", 200]
            - eq: ["app.code", 0]
            - set_data: ["sms.data.verifyCode", $file_path]
      tag: smoke
      json:
        confirmPassword: ${get_encode_str(word=$old_password)}
        password: ${get_encode_str(word=$old_password)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 0]
        - set_data: ["app.data.appUserInfo.guid",$file_path]
        - set_data: ["app.data.appUserInfo.clienteleGuid",$file_path]

  - case 3:
      testCaseName: 参数正确，带邀请码用户注册
      setup:
        - name: 删除用户
          environment: base_platform
          api: [basePlatform,user.deleteUser]
          json:
            guid: $app_guid
            operatorUserId: 43
          validate:
            - eq: ["status_code", 200]
            - contained_by: ["bp.code", [0, 40000004]]
        - name: 发送手机注册验证码
          api: [boss, sms.verifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 1
          validate:
            - eq: ["status_code", 200]
            - eq: ["sms.code", 0]
        - name: 获取注册验证码
          api: [boss, sms.getVerifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 1
          validate:
            - eq: ["status_code", 200]
            - eq: ["app.code", 0]
            - set_data: ["sms.data.verifyCode", $file_path]
      tag: smoke1
      json:
        confirmPassword: ${get_encode_str(word=$old_password)}
        password: ${get_encode_str(word=$old_password)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
        inviteCode: $inviteCode
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 0]
        - set_data: ["app.data.appUserInfo.guid",$file_path]

  - case 3:
      testCaseName: 参数错误，密码只有数字
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=12345678)}
        password: ${get_encode_str(word=12345678)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001014]
  - case 4:
      testCaseName: 参数错误，位数小于8位
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=1234567)}
        password: ${get_encode_str(word=1234567)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001018]
  - case 5:
      testCaseName: 参数错误，位数大于20位
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q12345678901234567890)}
        password: ${get_encode_str(word=q12345678901234567890)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001019]
  - case 6:
      testCaseName: 参数错误，包含特殊字符
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q1234567.1234567890)}
        password: ${get_encode_str(word=q1234567.8901234567890)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001014]
  - case 7:
      testCaseName: 参数错误，用户已存在
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q1234567)}
        password: ${get_encode_str(word=q1234567)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001015]
  - case 8:
      testCaseName: 参数手机号不符要求
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q1234567)}
        password: ${get_encode_str(word=q1234567)}
        phoneNumber: 1595802179
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001006]
  - case 9:
      testCaseName: 参数两次密码输入不一致
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q1234567)}
        password: ${get_encode_str(word=q12345679)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001001]
  - case 10:
      testCaseName: 参数确认密码输入格式不对
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q12345)}
        password: ${get_encode_str(word=q12345679)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001001]
  - case 11:
      testCaseName: 参数邀请码inviteCode验证
      tag: test
      json:
        confirmPassword: ${get_encode_str(word=q12345679)}
        password: ${get_encode_str(word=q12345679)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
        inviteCode: $inviteCode
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 0]


