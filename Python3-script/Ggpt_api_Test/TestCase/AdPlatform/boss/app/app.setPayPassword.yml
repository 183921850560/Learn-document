suiteName: app.setPayPassword 
testCase:
  - case 1:
      testCaseName: 参数正确，设置支付密码
      setup:
        - name: 发送手机验证码
          api: [boss,sms.verifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 5
          validate:
            - eq: ["status_code", 200]
            - eq: ["sms.code", 0]
        - name: 获取验证码
          api: [boss,sms.getVerifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 5
          validate:
            - eq: ["status_code", 200]
            - eq: ["app.code", 0]
            - set_data: ["sms.data.verifyCode", $file_path]
      tag: smoke
      json:
        payPassword: ${get_encode_str(word=123456)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 0]
  - case 2:
      testCaseName: 参数phoneNumber校验，手机号不匹配
      tag: test
      json:
        payPassword: ${get_encode_str(word=123456)}
        phoneNumber: 15958021798
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001034]
  - case 3:
      testCaseName: 参数phoneNumber校验，手机号格式错误
      tag: test
      json:
        payPassword: ${get_encode_str(word=123456)}
        phoneNumber: 11958021798
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001006]
  - case 4:
      testCaseName: 参数payPassword校验，小于6位
      tag: test
      json:
        payPassword: ${get_encode_str(word=12345)}
        phoneNumber: 15958021797
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - ne: ["app.code", 0]
  - case 5:
      testCaseName: 参数payPassword校验，大于6位
      tag: test
      json:
        payPassword: ${get_encode_str(word=1234578)}
        phoneNumber: 15958021797
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - ne: ["app.code", 0]
  - case 6:
      testCaseName: 参数payPassword校验，包含字母
      tag: test
      json:
        payPassword: ${get_encode_str(word=12345q)}
        phoneNumber: 15958021797
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - ne: ["app.code", 0]
  - case 7:
      testCaseName: 参数payPassword校验，入参null
      tag: test
      json:
        payPassword:
        phoneNumber: 15958021797
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 900500]
  - case 8:
      testCaseName: 参数payPassword校验，小于6位
      tag: test
      json:
        payPassword: ${get_encode_str(word=12345)}
        phoneNumber: 15958021797
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - ne: ["app.code", 0]
  - case 9:
      testCaseName: 参数smsVerifyCode校验，使用类型type:3 验证码进行操作
      setup:
        - name: 发送手机验证码
          api: [boss,sms.verifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 3
          validate:
            - eq: ["status_code", 200]
            - eq: ["sms.code", 0]
        - name: 获取验证码
          api: [boss,sms.getVerifyCode]
          params:
            phoneNumber: $phoneNumber
            type: 3
          validate:
            - eq: ["status_code", 200]
            - eq: ["app.code", 0]
            - set_data: ["sms.data.verifyCode", $file_path]
      tag: test
      json:
        payPassword: ${get_encode_str(word=123456)}
        phoneNumber: $phoneNumber
        smsVerifyCode: ${get_encode_str(word_type=sms)}
      validate:
        - eq: ["status_code", 200]
        - eq: ["app.code", 90001002]


